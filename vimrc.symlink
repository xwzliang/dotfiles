" load plugins
if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

filetype plugin indent on
" To ignore plugin indent changes, instead use:
filetype plugin on

" Automatically source vimrc on save when editting .vimrc
augroup myvimrchooks
	au!
	autocmd bufwritepost .vimrc source $MYVIMRC
augroup END


" Automatically reload file on change
" https://unix.stackexchange.com/questions/149209/refresh-changed-content-of-file-opened-in-vim/383044#383044
" Autoread does not reload file unless you do something like run external command (like !ls or !sh etc)
set autoread
" Trigger when cursor stops moving
"au CursorHold,CursorHoldI * checktime
"au FocusGained,BufEnter * :checktime
autocmd FocusGained,BufEnter,CursorHold,CursorHoldI * if mode() != 'c' | checktime | endif


" Settings for statusline
" Always to show statusline 
set laststatus=2
" Define color UserNumber
hi User1 ctermbg=brown ctermfg=black guibg=black guifg=green
" Customize statusline content
set statusline=
" Use color in User1
set statusline+=%1*
" Or use color same as function keyword highlight
"set statusline+=%#function#
" Show file name
set statusline+=%f

" Set the color of the status line in window which is currently focused
hi StatusLine ctermfg=brown ctermbg=black
" Set the color of the status line in windows which are not currently focused
hi StatusLineNC ctermfg=brown ctermbg=black
" Set the color of vertical border when split
hi VertSplit ctermfg=brown ctermbg=black
" Remove the pipe | in the vertical border when split
set fillchars+=vert:\ 

" Use ctrl+h,j,k,l to navigate through windows
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Use ctrl+arrow keys to resize window
noremap <silent> <C-LEFT> :vertical resize -3<CR>
noremap <silent> <C-RIGHT> :vertical resize +3<CR>
noremap <silent> <C-DOWN> :resize -3<CR>
noremap <silent> <C-UP> :resize +3<CR>

" Use ctrl+h,j,k,l in command line
cnoremap <C-h> <Left>
cnoremap <C-j> <Down>
cnoremap <C-k> <Up>
cnoremap <C-l> <Right>


" Settings vim editing
syntax on
set tabstop=4
set shiftwidth=4
set autoindent
" Use Tab for auto completion
imap <tab> <C-p>
" move vertically by visual line instead of real line using j and k, so if a long line gets visually wrapped into multiple lines, j and k won't skip over
nnoremap j gj
nnoremap k gk
" move to beginning/end of line using B and E
nnoremap B ^
nnoremap E $
" Use Shift+Tab to insert tab in edit mode
inoremap <S-Tab> <C-V><Tab>
" Allow saving of files as sudo when I forgot to start vim using sudo.
cmap w!! w !sudo tee > /dev/null %


" Automatically add shebang and two lines below, then go into insert mode
"autocmd BufNewFile * execute 'silent! 1s/.*/#!\/usr\/bin\/env ' . (empty(&filetype) ? '' : ' '.&filetype) . '\r\r'| :startinsert
" Below command will add shebang if filetype is not empty and not in skip list
autocmd BufNewFile * if (!empty(&filetype) && (filetype!="c")) | execute 'silent! 1s/.*/#!\/usr\/bin\/env ' . &filetype . '\r\r'| :startinsert | endif

" automatically give executable permissions if file begins with shebang
function MakeScriptExecuteable()
	if getline(1) =~ "^#!.*/bin/"
	silent !chmod +x %
	endif
endfunction

au BufWritePost * call MakeScriptExecuteable()


" For html files, indent two spaces
autocmd FileType html setlocal shiftwidth=2 softtabstop=2 expandtab

"vim-closetag
let g:closetag_filenames = '*.html,*.xhtml,*.phtml'

" Nerdcommenter
let g:NERDCustomDelimiters = { 
	\ 'bash': { 'left': '# ','right': '' },
	\ 'bats': { 'left': '# ','right': '' },
\ }
