;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(load-theme 'clues t)

;; Disable menu-bar-mode
(menu-bar-mode -1)

;; Change background color for modeline to dark orange
(set-face-background 'mode-line "#af5f00")
(set-face-background 'mode-line-inactive "#af5f00")

;; Change foreground color for active modeline to black
(set-face-foreground 'mode-line "black")

;; Change color for prompt in mini-buffer
(set-face-foreground 'minibuffer-prompt "white")


;; Changing tab width
(setq-default tab-width 4)

;; Use tab key to complete
(global-set-key "\t" 'dabbrev-expand)

;; Use shift tab (<backtab>) to insert tab
(global-set-key (kbd "<backtab>") (lambda () (interactive) (insert "\t")))


;; Enable electric-pair-mode for inserting new line and indent automatically after brace
(electric-pair-mode 1)

;; Key bindings for mini-buffer
(define-key minibuffer-local-map (kbd "C-u") 'backward-kill-sentence)

;; Change code indentation style for C
(add-hook 'c-mode-hook
	'(lambda()
		(c-set-style "cc-mode")))

;; Enable sh-mode for .bats file
(add-to-list 'auto-mode-alist '("\\.bats\\'" . sh-mode))

;; Automatically give executable permissions if file begins with shebang
(add-hook 'after-save-hook 'executable-make-buffer-file-executable-if-script-p)


;; Package settings

;; Config evil mode
(add-to-list 'load-path "~/.emacs.d/evil")
(require 'evil)
(evil-mode 1)
; Use M-h,j,k,l to move around windows
(global-set-key (kbd "M-h") 'evil-window-left)
(global-set-key (kbd "M-l") 'evil-window-right)
(global-set-key (kbd "M-j") 'evil-window-down)
(global-set-key (kbd "M-k") 'evil-window-up)
; Use C-h,j,k,l,b,w in ex command lines
(define-key evil-ex-completion-map "\C-b" 'backward-word)
(define-key evil-ex-completion-map "\C-w" 'forward-word)
(define-key evil-ex-completion-map "\C-h" 'backward-char)
(define-key evil-ex-completion-map "\C-l" 'forward-char)
(define-key evil-ex-completion-map "\C-k" 'previous-complete-history-element)
(define-key evil-ex-completion-map "\C-j" 'next-complete-history-element)
; Use B,E to move to the beggining and end of line
(define-key evil-motion-state-map "B" 'evil-beginning-of-line)
(define-key evil-motion-state-map "E" 'evil-end-of-line)

;; settings for smartparens package
(require 'smartparens-config)
(smartparens-global-mode 1)

;; settings for evil-surround
(global-evil-surround-mode 1)

;; settings for evil-nerd-commenter
(evilnc-default-hotkeys)

;; settings for git-gutter
(global-git-gutter-mode +1)

;; settings for neotree
(require 'neotree)
;; Use F8 to toggle neotree globally
(global-set-key [f8] 'neotree-toggle)
;; Use ctrl+n to toggle neotree in evil normal state
(define-key evil-normal-state-map (kbd "C-n") 'neotree-toggle)
 (add-hook 'neotree-mode-hook
    (lambda ()
      (define-key evil-normal-state-local-map (kbd "q") 'neotree-hide)
      (define-key evil-normal-state-local-map (kbd "I") 'neotree-hidden-file-toggle)
      (define-key evil-normal-state-local-map (kbd "z") 'neotree-stretch-toggle)
      (define-key evil-normal-state-local-map (kbd "R") 'neotree-refresh)
      (define-key evil-normal-state-local-map (kbd "r") 'neotree-rename-node)
      (define-key evil-normal-state-local-map (kbd "c") 'neotree-create-node)
      (define-key evil-normal-state-local-map (kbd "p") 'neotree-copy-node)
      (define-key evil-normal-state-local-map (kbd "d") 'neotree-delete-node)
      (define-key evil-normal-state-local-map (kbd "s") 'neotree-enter-vertical-split)
      (define-key evil-normal-state-local-map (kbd "S") 'neotree-enter-horizontal-split)
      (define-key evil-normal-state-local-map (kbd "RET") 'neotree-enter)))

;; settings for helm
(helm-mode 1)
; Bind helm-M-x to M-x
(global-set-key (kbd "M-x") 'helm-M-x)
; Use C-h,j,k,l,b,w in helm mode
(define-key helm-map (kbd "C-j") 'helm-next-line)
(define-key helm-map (kbd "C-k") 'helm-previous-line)
(define-key helm-map (kbd "C-h") 'left-char)
(define-key helm-map (kbd "C-l") 'right-char)
(define-key helm-map (kbd "C-p") 'previous-history-element)
(define-key helm-map (kbd "C-n") 'next-history-element)
(define-key helm-map (kbd "C-b") 'left-word)
(define-key helm-map (kbd "C-w") 'right-word)

;; settings for magit
(global-set-key (kbd "C-x g") 'magit-status)
(add-hook 'magit-post-refresh-hook
          #'git-gutter:update-all-windows)

;; settings for evil-magit
(require 'evil-magit)


(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(git-gutter:modified-sign "~")
 '(insert-shebang-file-types
   (quote
	(("py" . "python3")
	 ("groovy" . "groovy")
	 ("fish" . "fish")
	 ("robot" . "robot")
	 ("rb" . "ruby")
	 ("lua" . "lua")
	 ("php" . "php")
	 ("sh" . "bash")
	 ("pl" . "perl")
	 ("bats" . "bats")))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(git-gutter:added ((t (:foreground "white" :weight extra-light))))
 '(git-gutter:deleted ((t (:foreground "white" :weight extra-light))))
 '(git-gutter:modified ((t (:foreground "white" :weight extra-light)))))

;; For file extension in my_insert_file_type_list and file has not been created yet, insert shebang, two newline and enter evil-insert-state
(defun my_shebang_hook()
  (setq my_insert_file_type_list (list
    "sh"
    "py"
    "bats"
   ))
  (if (and (member (file-name-extension (buffer-name)) my_insert_file_type_list) (not (file-exists-p (buffer-name))))
    (progn
      (insert-shebang)
      (newline)
      (newline)
      (evil-insert-state))))

(add-hook 'find-file-hook 'my_shebang_hook)


;; Change appearance for w3m
(defun my-w3m-faces ()
  "Buffer-local face remapping for `w3m-mode-hook'."
  (face-remap-add-relative 'default
                           :background "white"
                           :foreground "black"))

(add-hook 'w3m-mode-hook #'my-w3m-faces)
